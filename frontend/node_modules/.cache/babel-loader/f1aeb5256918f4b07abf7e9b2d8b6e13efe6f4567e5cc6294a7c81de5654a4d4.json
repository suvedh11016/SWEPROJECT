{"ast":null,"code":"var _jsxFileName = \"/home/suvedh/SWE_PROJECT/project/SWEPROJECT/frontend/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [step, setStep] = useState(1); // Step 1: OTP verification, Step 2: Reset password\n  const [otp, setOtp] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMsg('');\n    try {\n      const response = await fetch(`/api/verify-otp/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMsg(data.error || 'Password reset failed.');\n      }\n    } catch {\n      setMsg('Network error.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: '40px auto',\n      padding: 24,\n      border: '1px solid #ddd',\n      borderRadius: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          padding: 8,\n          marginBottom: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: '100%',\n          padding: 10\n        },\n        disabled: loading,\n        children: loading ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"uRc4ENYt/Z2RtgHELXB66eoreOc=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","step","setStep","otp","setOtp","password","setPassword","msg","setMsg","loading","setLoading","handleOtpSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","type","placeholder","value","onChange","target","required","width","marginBottom","disabled","marginTop","_c","$RefreshReg$"],"sources":["/home/suvedh/SWE_PROJECT/project/SWEPROJECT/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction ResetPassword() {\n  const { token } = useParams();\n  const [step, setStep] = useState(1); // Step 1: OTP verification, Step 2: Reset password\n  const [otp, setOtp] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleOtpSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMsg('');\n    try {\n      const response = await fetch(`/api/verify-otp/${token}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ otp })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMsg(data.error || 'Password reset failed.');\n      }\n    } catch {\n      setMsg('Network error.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '40px auto', padding: 24, border: '1px solid #ddd', borderRadius: 8 }}>\n      <h2>Reset Password</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          placeholder=\"Enter new password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n          style={{ width: '100%', padding: 8, marginBottom: 16 }}\n        />\n        <button type=\"submit\" style={{ width: '100%', padding: 10 }} disabled={loading}>\n          {loading ? 'Resetting...' : 'Reset Password'}\n        </button>\n      </form>\n      {msg && <div style={{ marginTop: 16 }}>{msg}</div>}\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}